# This code is generated by PyUIbuilder: https://pyuibuilder.com

import tkinter as tk
from tkinter import Toplevel
from tkinter import filedialog


root = tk.Tk()
root.config(bg="#E4E2E2")
root.title("Main Window")
root.geometry("950x600")

# Create variables for checkbuttons
export_var = tk.IntVar()
print_var = tk.IntVar()
save_var = tk.IntVar()


def open_file():
    filepath = filedialog.askopenfilename(title="Select a File", filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
    if filepath:
        print(f"Selected file: {filepath}")
        # Perform actions with the selected file, e.g., read its contents
        with open(filepath, 'r') as file:
            content = file.read()
            print(content)

def save_file():
    filepath = filedialog.asksaveasfilename(title="Save As", defaultextension=".txt", filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
    if filepath:
        print(f"Saving to: {filepath}")
        # Perform actions to save data to the selected file
        with open(filepath, 'w') as file:
            file.write("Sample text to save.")



def configure():
    print("configure Alpha pressed")
    top = Toplevel()
    top.title("Configuration Window")
    ok = tk.Button(master=top, text="ok", command=top.destroy).pack()
    top.geometry("300x200")
    #choose ethernet port
    #server IP Address
    #server port number
    #other modbus varables to expose to the user

def sample():
    print("sample pressed")
    # pymodbus code to sample the alpha20 and display the results in the entry box
def sample_load():
    print("sample loadcell pressed")
    # pymodbus code to sample the loadcell and display the results in the entry box

def configure_loadcell():
    print("configure loadcell pressed")

v1 = tk.Entry(master=root, text="V1")
v1.config(bg="#fff", fg="#000")
v1.place(x=30, y=195, width=120, height=40)

v2 = tk.Entry(master=root, text="V2")
v2.config(bg="#fff", fg="#000")
v2.place(x=30, y=288, width=120, height=40)

v3 = tk.Entry(master=root, text="V3")
v3.config(bg="#fff", fg="#000")
v3.place(x=30, y=385, width=120, height=40)

i1 = tk.Entry(master=root, text="I1")
i1.config(bg="#fff", fg="#000")
i1.place(x=200, y=195, width=120, height=40)

i2 = tk.Entry(master=root, text="I2")
i2.config(bg="#fff", fg="#000")
i2.place(x=200, y=288, width=120, height=40)

i3 = tk.Entry(master=root, text="I3")
i3.config(bg="#fff", fg="#000")
i3.place(x=200, y=385, width=120, height=40)

label = tk.Label(master=root, text="Voltage")
label.config(bg="#E4E2E2", fg="#000")
label.place(x=45, y=150, width=80, height=40)

label1 = tk.Label(master=root, text="Current")
label1.config(bg="#E4E2E2", fg="#000")
label1.place(x=220, y=150, width=80, height=40)

congif_alpha = tk.Button(master=root, text="Configure Alpha", command=configure)
congif_alpha.config(bg="#E4E2E2", fg="#000")
congif_alpha.place(x=200, y=40, width=120, height=40)

device_name = tk.Entry(master=root, text="status")
device_name.config(bg="#fff", fg="#000")
device_name.place(x=200, y=107, width=120, height=40)

sample_alpha = tk.Button(master=root, text="Sample", command=sample)
sample_alpha.config(bg="#E4E2E2", fg="#000")
sample_alpha.place(x=45, y=75, width=80, height=40)

option_menu1_options = ["last used","Browse"]
option_menu1_var = tk.StringVar(value="Browse")
option_menu1 = tk.OptionMenu(root, option_menu1_var, *option_menu1_options)
option_menu1.config(bg="#E4E2E2", fg="#000")
option_menu1.place(x=607, y=326, width=120, height=30)

savePdf = tk.Checkbutton(master=root, text="save.pdf", variable=save_var)
savePdf.config(bg="#E4E2E2", fg="#000")
savePdf.select()
savePdf.place(x=426, y=346, width=120, height=30)

print_checkbox = tk.Checkbutton(master=root, text="print", variable=print_var)
print_checkbox.config(bg="#E4E2E2", fg="#000")
print_checkbox.select()
print_checkbox.place(x=419, y=419, width=120, height=30)

mass = tk.Entry(master=root, text="mass")
mass.config(bg="#fff", fg="#000")
mass.place(x=688, y=250, width=120, height=40)

sample_loadcell = tk.Button(master=root, text="sample", command=sample_load)
sample_loadcell.config(bg="#E4E2E2", fg="#000")
sample_loadcell.place(x=450, y=250, width=80, height=40)

config_loadcell = tk.Button(master=root, text="configureL", command=configure_loadcell)
config_loadcell.config(bg="#E4E2E2", fg="#000")
config_loadcell.place(x=575, y=250, width=80, height=40)

datetime = tk.Entry(master=root, text="date/time")
datetime.config(bg="#fff", fg="#000")
datetime.place(x=800, y=75, width=120, height=40)

label2 = tk.Label(master=root, text="Loadcell")
label2.config(bg="#E4E2E2", fg="#000")
label2.place(x=575, y=200, width=80, height=40)

entry3 = tk.Entry(master=root, text="serial number")
entry3.config(bg="#fff", fg="#000")
entry3.place(x=500, y=133, width=120, height=40)

open_button = tk.Button(root, text="Open File", command=open_file)
open_button.pack()

save_button = tk.Button(root, text="Save File", command=save_file)
save_button.pack()

root.mainloop()

